# This is a basic workflow to help you get started with Actions

name: CI with Scandium

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Ensure jq is installed for JSON parsing
      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Run Scandium Test
        run: |
          # Make the API request and store the response
          response=$(curl -X POST -H "Content-Type: application/json" -H "x-api-token: 2DzWQDTnUypocm0tNkzHIubrJUb4ZF" \
            -d '{"project_id": "9d5e9b27-c3a6-423b-b1d4-ca9fb3cb7d3b", "suite_id": "9d6ab0a8-8842-4bce-b950-d50cf7ec52c2", "browser": "chrome", "screenshot": true, "strategy": "await", "variables": {}, "retry": 0}' \
            "https://scr.getscandium.com/suites/execute")

          # Debug: Output the raw response to check if it's valid JSON
          echo "Raw response: $response"

          # Check if the response is empty
          if [ -z "$response" ]; then
            echo "Error: No response from Scandium API."
            exit 1
          fi

          # Attempt to parse the response
          status=$(echo "$response" | jq -r .data.result.status)
          message=$(echo "$response" | jq -r .message)

          # Check if parsing succeeded by testing the presence of expected keys
          if [ "$status" = "null" ]; then
            echo "Error: Failed to parse JSON response. Response: $response"
            exit 1
          fi

          # Process the test results
          if [ "$status" = "success" ]; then
            echo "Test ran successfully. Status: $status"
          else
            echo "Test ran with failure. Status: $status. Message: $message"
            exit 1
          fi
        env:
          CURL_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt # Set the CA certificates bundle path
